CHEATSHEET
    "https://about.gitlab.com/images/press/git-cheat-sheet.pdf"
    "https://www.nobledesktop.com/learn/git/git-branches"





SAVE TO BACKUP
    "back up files to folder"
    git init
    git add ["ADD FOLDERS ONE BY ONE OR MAKE A GIT IGNORE"]
    git commit -m "DATE OF BACKUP"
    git branch -M MONTH_YEAR     #make sure youre in the branch 
    git remote add origin GIT_URL
    git push -u origin MONTH_YEAR



ADD TO BRANCH
    git init
    git add .
    git commit -m "comment"
    git branch -M BRANCH_NAME
    git remote add REPO_URL
    git push -u origin BRANCH_NAME







UPDATING BRANCH IN GIT
    git init
    git remote add origin <URL>
    git pull origin <REMOTE BRANCH NAME>
    git checkout <REMOTE BRANCH NAME>

    make changes

    git add .
    git commit -m "updated notes" 
    git push -u origin <REMOTE BRANCH NAME> 









DOWNLOAD SPECIFIC DIR FROM GIT
    # Create a directory, so Git doesn't get messy, and enter it
    mkdir my-dir && cd my-dir

    # Start a Git repository
    git init

    # Track repository, do not enter subdirectory
    git remote add -f origin https://github.com/terroo/fonts/

    # Enable the tree check feature
    git config core.sparseCheckout true

    # Create a file in the path: .git/info/sparse-checkout
    # That is inside the hidden .git directory that was created
    # by running the command: git init
    # And inside it enter the name of the sub directory you only want to clone
    echo 'files' >> .git/info/sparse-checkout

    ## Download with pull, not clone
    git pull origin master








NEW PROJECT REPO 
    git init
    git add .
    git commit -m "MESSAGE"

    ADDING LOCAL .git TO ONLINE REPO
        create repo on website
        copy HTTP link
            git remote add HTTP_LINK
            git branch -M main
            git push -u origin main





*** PUSH CODE CHANGES TO REPO BRANCH ***
    COMMIT CHANGES
        git diff
        git status
        git add .
        git commit -m "BRANCH UPDATE"
    
    PUSH [branch]
        git pull origin BRANCH
        git push origin BRANCH





CLONE SPECIFIC BRANCH 
    git clone -b <branchname> <remote-repo-url>



"NOTE: common practices are to create a BRANCH for the desired CODE FEATURE... then COMMIT to that branch"
CREATE BRANCH
    git branch -a
    git checkout -b my-branch-name
    ["after commits"]
        git push -u origin my-branch-name


START WORKING ON A BRANCH
    git checkout NAME_OF_BRANCH


PUSH CODE CHANGES TO SPECIFIC BRANCH
    "commit changes SEE ABOVE"
    ...
    git push -u origin NAME_OF_BRANCH



MERGE BRANCH WITH MASTER/MAIN BRANCH
    git checkout main
    git pull origin main
    git merge NAME_OF_BRANCH
    git push origin main



DELETE BRANCH
    git branch -d NAME_OF_BRANCH
    git push origin --delete NAME_OF_BRANCH





GIT BRANCH RENAME 
    git branch -m OLD_BRANCH NEW_BRANCH
    git fetch origin
    git branch -u origin/NEW_BRANCH NEW_BRANCH
    git remote set-head origin -a
